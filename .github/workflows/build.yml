name: Build And Deploy WebGL #このワークフローの名前

#ワークフローを始めるトリガー
on:
  workflow_dispatch:  #手動でワークフローを始められる
  push:               #リポジトリにプッシュしたとき
  pull_request:
    types: ["closed"] #プルリクエストがクローズされたとき
    branches:
      - main           #対象ブランチ

#ワークフロー内で実行される一連のタスク
jobs: 
  ubuntu-build:             #ジョブの名前
    runs-on: ubuntu-latest  #ワークフロー内の仮想マシンの種類

    permissions:              #ワークフロー対して権限を与えるセクション
      checks: write           #書き込み権限
      contents: write         #リポジトリへの書き込み権限

    steps:
      - name: Checkout              
        uses: actions/checkout@v4  #チェックアウトでリポジトリのコードをワークフロー内に取り込む

      - name: Cache library #キャッシュを作る
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**','Packages/**','ProjectSettings/**') }}
          restore-keys: Library-

      - name: Build Project #ここでビルド
        uses: game-ci/unity-builder@v4  #GameCIのUnity_builderを使用
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with: 
          targetPlatform: WebGL         #ビルドするプラットフォーム
          unityVersion: auto            #使用するUnityエディタのバージョン　EditorVersion.txt内に書いている内容
          projectPath: .    #リポジトリのUnityプロジェクトのパス プロジェクト名を入れる

      - name: Upload artifacts  #ビルドの成果物を保存
        uses: actions/upload-artifact@v4
        with:
          name: WebGL-Build
          path: build/WebGL
          
  ubuntu-deploy:
    runs-on: ubuntu-latest

    needs: ubuntu-build

    steps: 
      #チェックアウト
      - name: checkout repository
        uses: actions/checkout@v4

      #WebGLビルドのダウンロード
      - name: Download artifact
        uses: actions/download-artifact@v4
        with: 
          name: WebGL-Build
          path: build/WebGL

      
      - name: Deploy to Netlify
        id: netlify
        run: |
            OUTPUT=$(npx netlify-cli deploy --dir=build/WebGL/WebGL --prod)
            DEPLOY_URL=$(echo "$OUTPUT" | grep -o 'https://[^ ]*\.netlify\.app' | head -n 1)
            echo "url=$DEPLOY_URL" >> $GITHUB_OUTPUT
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
    
      - name: Notify Discord
        run: |
          DEPLOY_URL="${{ steps.netlify.outputs.url }}"
          curl  -H "Content-Type: application/json" \
                -X POST \
                -d "{\"content\": \"✅ デプロイ完了: ${DEPLOY_URL}\"}" \
                ${{ secrets.DISCORD_WEBHOOK_URL }}